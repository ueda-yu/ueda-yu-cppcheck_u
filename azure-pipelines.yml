# C/C++ with GCC
# Build your C/C++ project with GCC using make.
# Add steps that publish test results, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/c-cpp/gcc

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps: 
##  Black Duck C-CPP  (https://pypi.org/project/blackduck-c-cpp/) ##
- script: |
    mkdir build && cd build
    cmake ..
    sudo apt-get update
    pip install blackduck-c-cpp
    blackduck-c-cpp -bc "cmake --build ." -d . -s False -v True -proj Ueda_test -vers ADO_C_CPP -bd $(BLACKDUCK_URL) -a $(BLACKDUCK_TOKEN) -i False
  displayName: 'C-CPP'

##  Black Duck Synopsys Detect (https://marketplace.visualstudio.com/items?itemName=synopsys-detect.synopsys-detect ) ##
- task: SynopsysDetectTask@9
  inputs:
    BlackDuckService: 'Black Duck Test Server'
    DetectArguments: '--blackduck.trust.cert=true --detect.project.name=Ueda_test --detect.project.version.name=ADO_plug-in'
    DetectVersion: 'latest'
  displayName: 'Synopsys Detect'

## SCA Synopsys Security Scan (https://marketplace.visualstudio.com/items?itemName=synopsys-security-scan.synopsys-security-scan) ##
- task: SynopsysSecurityScan@1
condition: not(eq(variables['Build.Reason'], 'PullRequest'))
  env:
    DETECT_PROJECT_NAME: Ueda_test
    DETECT_PROJECT_VERSION_NAME: ADO_SecurityScan
    DETECT_EXCLUDED_DETECTOR_TYPES: GIT
  inputs:
    scanType: 'blackduck'
    bridge_blackduck_url: $(BLACKDUCK_URL)
    bridge_blackduck_token: $(BLACKDUCK_TOKEN)
    bridge_blackduck_scan_full: true
  displayName: 'Synopsys Security Scan PR'
